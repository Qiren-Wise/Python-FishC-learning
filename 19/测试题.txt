0、请问以下哪个是形参哪个是实参？
def MyFun(x):
    return x ** 3

y = 3
print(MyFun(y))
答：MyFun(x)是形参，MyFun(y)是实参，一个y是有包含值的。

1、函数文档和直接用“#”为函数写注释有什么不同？
答：函数文档可以用.__doc__读取,注释不行。

2、使用关键字参数，可以有效避免什么问题的出现呢？
答：因为参数太多，而出现输入的错误。

3、使用help(print)查看print()这个BIF有哪些默认参数？分别起到什么作用？
答：print(*objects,sep=' ',end='\n',file=sys.stdout,flush=False)
*objects代表这是一个收集参数，可以输入多个对象。
sep代表他们之间使用的分隔符，默认是空格。
end代表他们结束的时候以什么字符结束，默认是换行。
file代表他们输出到哪个位置。
flush代表是否强制刷新缓存。

4、默认参数和关键字参数表面最大的区别是什么？
默认参数是写在形参上的，关键字参数卸载实参上。



总结：这节课我们了解了形参与实参、函数文档、关键字参数、默认参数、收集参数
形参就是函数括号内的参数，如liu(name)。
实参是这个括号内参数所包含的值，如liu('jiajun')
函数文档类似与注释，可以方便后来的人查看该函数的意思，与注释不同的是函数文档是可以被读取的，可以用.__doc__读取（两个下划线）。
关键字参数就是在参数进行输出的时候，在前面加上参数名进行解释，这样你就可以打乱参数的位置了，在参数很多的时候，这种方法很好用。
默认参数就是在刚开始设定参数的时候给它设置一个默认值，这样就算你之后没有定义参数，函数也会按照默认值来输出。
收集参数就是当你在不确定该参数包含几个元素的时候，可以在定义函数的时候，在参数前面加'*'号，这就代表该参数是收集参数，在后面函数
进行输出的时候，你只要每个元素之间用逗号隔开，这样就会把这几个元素视为一个元组输出到带'*'的参数里面，注意：如果要输入下一个参数的
元素，需要用关键字参数来定位。
'*'在形参里面是进行“打包”，作为收集参数使用，而在实参里面，可以用作“解包”使用哦！详见P70