总结：这节课我们了解了异常的一些处理方法
语法：
    try:
        # 这里填需要检测的语句
    except  Exception[as reason]:
        # 出现异常后处理的代码
    finally:
        # 文件即使因为异常终止，但也必须要执行的收尾语句

    - except后面可以填入可能会出现的异常，如OSError、NameError等，然后出现这中异常问题的时候，就是执行except语句后的代码
可以通过不同的异常来设置不同的except语句，分别前后放置就好了，要同时处理多个异常也可以在except后面用括号把多个异常包
起来，如except (NameError,TypeError,SyntaxError)。
    - as后面的值是一个变量，你如果想知道出错的原因，可以在as后面输入变量，这样异常原因就会输入到该变量中，后面只需要输入如：
print('出错原因是：' + str(reason))，就可以将异常原因打印出来，不过打印的时候记得加上str()将它转换成字符串哦！

    - 如果不知道可能出现什么异常，或者需要对所有异常进行统一处理，可以在except后面不加任何参数，这样程序就会捕获所有异常，或者
在except后面照常输入Exception as reason，这样程序就会把不管什么异常的原因都会输入到reason变量中
    - 不过不建议这样做，因为他会隐藏所有程序员为想到并且未做好处理准备的错误。

    - finally语句可以执行一些就算程序异常终止后，还是要执行的代码，如文件的关闭语句，这样不管程序有没有崩溃，都会关闭文件保存下
    已写入的内容
    - 如果try语句块没有出现任何运行错误，会跳过except语句直接执行finally语句，如果出现异常，则会先执行except语句的内容再执行
    finally的内容，总之，finally就是无论如何都会执行的内容

    - raise语句
    通过raise语句可以自己弹出一个异常，语法就是再raise后面加上任何异常的英文单词，那么raise就会弹出该异常提示，当然，不输入任何
    英文只输入raise也是会弹出异常的，内容是：RuntimeError: No active exception to reraise。
    我们该可以在raise后面加括号填入该异常的解释，如raise NameError('程序试图访问不存在的变量！')

