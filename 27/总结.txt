总结：这一节课我们了解了一些字典的内置方法
1. fromkeys(seq[,value])
这个函数可以创建并返回一个新的字典，因为是新的字典，所以用它来修改字典是没用的，并且也不会改变元字典的值，它有两个参数：第一个参数是字典的键，第二个参数是可选的，
代表字典的值，如果不提供，默认为None，但是第二个参数的值是统一赋给第一个参数的的每一项的，不会分别赋值噢！

2. keys(),values(),item()
这三个函数第一个函数用来返回字典的键，第二个函数返回字典的值，第三个函数返回字典的项

3. get(key[,default])
字典有时候很大，我们并不知道我们访问的值在不在字典中，如果不在，我们访问的时候就会报错，get()函数可以很好的避免这个问题,第一个参数填字典的键，如果找到了，会返回
该键的值。第二个参数可以填没找到返回的值，比如第二个参数填'木有'，找不到时就会返回木有，当然也可以不填，不填默认返回None
我们查找一个键在不在字典中还可以用成员操作符(in 和 not in)来查找，查找到了返回True，反之返回False

4. clear()
这个函数可以帮助我们彻底清除字典，虽然说把字典={}也能把字典设为空字典，但是不够彻底，如果有其它变量指向这个字典，那么哪个变量中这个字典还会存在，用这个内置函数
可以彻底清空各个函数中的这个字典。

5. copy()
这个函数可以拷贝（浅拷贝)一个字典，和列表类似，这是拷贝一个和原字典相同，但是不相关联的字典，用了这个内置函数拷贝的字典，就算用clear()函数来清空原字典，副本字典
也不会受到任何影响。

6. pop(key[,default]) 和 popitem()
pop()是弹出指定的值，括号里面填字典的键，则字典就会弹出那一项， popitem()是弹出随机的一个项，因为字典是没有固定顺序的，这两个和列表相似

7. setdfault(key[,default])
这个方法和get()方法有点相似，都是用来查找字典的值，只不过如果setdfault()没找到相应的值的话，会默认添加一个项，这个项的键为括号里的第一个参数内容，值为第二个参数
的内容，不填默认为None，如果找到了同样返回该键的值    

8. update([other])
这个可以用来更新字典，括号内填需要添加的项，格式为a.update(小白='狗'),中间使用等于号，而且前面的字符串不用加引号哦！

最后说了python的另一种收集参数方式，就是用两个**表示，这代表把参数打包成字典，同样也可以用于解包，具体例子看书本P99
