总结：这节课初步介绍了类和对象
首先对于对象，我们python就是一门面向对象的语言，面向对象的灵感都是来源于现实世界的
	如人：
		静态的特征有：姓名、性别、身高、体重.....
		动态的特征有：跑步跑多远、跳舞有多强、吃饭的姿态.......
	我们把这些特征封装在一起，静态的特征就相当于对象的属性，动态的特征就像是对象的方法，python中的对象也是这样组成的
	如：
		class Person():		# 注意，我们类的类名最好首字母大写，作为对函数的区分
			name = '张三'
			age = 18		# 类的属性就是变量
			
			def run(self):		# 对象的方法就像函数一样
				print("我跑一千米不大喘气！")
				
			def swim(self):
				print('我游泳的姿态很优美')
	以上代码定义的属性和方法，将这些定义称为类，我们还需要使用类来创建一个真正的对象，这个对象就成为对象的实例，也称为实例对象
	对象实例化：
	people = Person()		# 将类赋值给一个对象，当然也可以不赋值，直接使用类名进行操作
	people.name		# 返回的是人名"张三"
	people.run()			# 返回的是类的方法，也就是run函数
	我们要调用对象中的属性和方法，用'.'操作符即可
	
	对象还具有以下三个特征：
	1. 封装
	2. 多态
	3. 继承
	
	- 封装
		就像列表一样，你不用怎么也不会知道列表中封装着什么，有什么功能
			它封装起来，只给我们需要的方法的名字，然后我们知道实现的结果就可以了，它怎么实现的，并不会告诉我们
	- 多态
		不同对象对同一方法相应不同的行动，就像不同生物对于跑步这一运动采取的行动，如兔子是一蹦一跳的，乌龟肯定只能表现出慢慢爬
	- 继承
		子类自动共享父类之间的数据和方法的机制，具体后面会再讲
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	