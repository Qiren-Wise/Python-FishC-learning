测试题：
    0、根据说明填写相应的字符串格式化符号
    符号	     说明
    %_c_	    格式化字符及其ASCII码
    %_s_	    格式化字符串
    %_d_	    格式化整数
    %_o_	    格式化无符号八进制数
    %_x_	    格式化无符号十六进制数
    %_X_	    格式化无符号十六进制数（大写）
    %_f_	    格式化定点数，可指定小数点后的精度
    %_e_	    用科学计数法格式化定点数
    %_g_	    根据值的大小决定使用%f或者%e
    %_G_	    根据值的大小决定使用%F或者%E

    1、请问以下这行代码会打印什么内容？
    >>> "{{1}}".format("不打印", "打印")
    答：打印1

    修改：打印{1}

    2、以下代码中，a, b, c是什么参数？
    >>> "{a} love {b}.{c}".format(a="I", b="FishC", c="com")
        'I love FishC.com'
    答：关键字参数。

    以下代码中，{0}, {1}, {2}是什么参数？
    >>> "{0} love {1}.{2}".format("I", "FishC", "com")
        'I love FishC.com'
    答：位置参数。

    如果想要显示Pi = 3.14，format前边的字符串应该怎么填写呢？
    ''.format('Pi = ', 3.1415)
    答：'{0}:{1:.2f}'.format('Pi = ', 3.1415)

    总结：这节课教了format()函数和格式化操作符。
    format()里面可以左边填字符串对应的关键字参数或者位置参数，后边填需要组合的关键字，关键字参数和位置参数用{}来包含。
    注意：关键字参数和位置参数不能混合使用！！
    要想在format()函数里输出{},和\\一样，外面多用一个{}就可以转译自身了。
    然后可以在位置参数或者关键字参数里面加入:，冒号代表格式化符号的开始，后面可以加入格式化符号，如{0:.1f}，就代表第0个参数四舍五入保留一位小数。
    然后接着是格式化操作符，格式化操作符前面通常会有%，如测试题0所示
    格式化操作符辅助命令和转义字符可见书本p56。